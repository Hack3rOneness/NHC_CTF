"""
Django settings for SCTF project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import os

from django.urls.base import reverse_lazy
from registration_defaults.settings import *
import pytz
import dj_database_url
import django_heroku

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_TMP = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

os.makedirs(STATIC_TMP, exist_ok=True)
os.makedirs(STATIC_ROOT, exist_ok=True)

STATICFILES_DIRS = (
os.path.join(BASE_DIR, 'static'),
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'pw4sgxo_esjfpo7$fyc5vcb#ib3xi*yh$23lt1i#70bed6=^cz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['nhcctf.herokuapp.com',
                'whispering-bastion-87009.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'SCTF',
    'accounts',
    'challenges',

    'rest_framework',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'cities_light',
    'autofixture',
    'tinymce',

    'channels',
    'constance',
    'constance.backends.database',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'accounts.middleware.LoginRequiredMiddleware',
    'accounts.middleware.LoggedInUserWithoutProfileMiddleware',
    'accounts.middleware.LoggedInUserWithoutTeamMiddleware',
    'SCTF.middleware.FilterRequestByGameStateMiddlewareMixin',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'SCTF.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.request',
                'SCTF.context_processors.config_constant_processor'
            ],
        },
    },
]

WSGI_APPLICATION = 'SCTF.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = 'uploaded_media/'
MEDIA_URL = 'media/'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = reverse_lazy('login')


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['en']
CITIES_LIGHT_INCLUDE_CITY_TYPES = []

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgiref.inmemory.ChannelLayer",

        "ROUTING": "SCTF.routing.channel_routing",
    },
}

GAME_STATUS_SETUP = 'SETUP'
GAME_STATUS_PLAY = 'PLAY'
GAME_STATUS_PAUSE = 'PAUSE'
GAME_STATUS_FINISH = 'FINISH'

GAME_STATUS_CHOICES_NAMES = (GAME_STATUS_SETUP, GAME_STATUS_PLAY, GAME_STATUS_PAUSE, GAME_STATUS_FINISH)
GAME_STATUS_CHOICES = [(s, s.capitalize()) for s in GAME_STATUS_CHOICES_NAMES]

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_ADDITIONAL_FIELDS = {
    'status_select': ['django.forms.fields.ChoiceField', {
        'widget': 'django.forms.Select',
        'choices': GAME_STATUS_CHOICES
    }],
}

from datetime import datetime
CONSTANCE_CONFIG = {
    'GAME_STATUS': ('SETUP', 'Game Status', 'status_select'),
    'GAME_DURATION_DAYS': (1, 'Duration Days'),
    'GAME_DURATION_HOURS': (0, 'Duration Hours'),
    'GAME_DURATION_MINS': (0, 'Duration Minutes'),
    'GAME_START_DATETIME': (datetime.now(pytz.utc), 'Duration Minutes', datetime),
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Disabling Collectstatic
# set DISABLE_COLLECTSTATIC=1
# DISABLE_COLLECTSTATIC=1
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Activate Django-Heroku
django_heroku.settings(locals())
